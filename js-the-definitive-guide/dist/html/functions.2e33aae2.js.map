{"mappings":"AAAA,8MAA8M;AAE9M,YAAY;AAEZ,2BAA2B,CAE3B,mEAAmE;AACnE,SAAS,UAAU,CAAC,CAAC,EAAE;IACrB,IAAK,CAAC,IAAI,CAAC,CACT,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;CAEjC;AAED,MAAM,QAAQ,GAAG;IACf,IAAI,EAAE,OAAO;IACb,KAAK,EAAE,WAAW;IAClB,GAAG,EAAE,gBAAgB;CACtB;AAED,uBAAuB;AAIvB,IAAI,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC,EAAE;IAC5B,IAAI,CAAC,IAAI,CAAC,EAAE,OAAO,CAAC,CAAA;IACpB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA;CACpB;AAED,4BAA4B;AAE5B,iBAAiB;AAEjB,IAAI,CAAC,GAAG,EAAE;AAEV,uCAAuC;AACvC,SAAS,GAAG,GAAG;IACb,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,YAAY;IAE9B,IAAI,KAAK,GAAG,WAAY;QACtB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;KAChB;IACD,KAAK,EAAE,CAAC;IAGV,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACnB,KAAK,EAAE,CAAC;CACT;AAED,QAAQ;AAGR,0BAA0B,CAC1B,MAAM,MAAM,GAAG,SAAU,CAAC,EAAE;IAC1B,OAAO,CAAC,GAAG,CAAC,CAAA;CACb;AAED,IAAI,UAAU,GAAI,SAAU,CAAC,EAAE;IAAE,OAAO,CAAC,GAAG,CAAC,CAAA;CAAE,CAAC,EAAE,CAAC,AAAC;AACpD,0BAA0B;AAG1B,qBAAqB,CACrB,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,GAAM,CAAC,GAAG,CAAC,AAAC;AAC7B,2BAA2B;AAE3B,MAAM,YAAY,GAAG,CAAA,CAAC,GAAK,EAAE,AAAC;AAC9B,8BAA8B;AAE9B,kDAAkD;AAClD,MAAM,GAAG,GAAG;AAAC,KAAC;IAAE,IAAI;AAAE,KAAC;AAAE,KAAC;CAAC;AAE3B,IAAI,QAAQ,GAAG,GAAG,CAAC,MAAM,CAAC,CAAA,CAAC,GAAI,CAAC,KAAK,IAAI,CAAC;AAC1C,6CAA6C;AAE7C,IAAI,OAAO,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAA,CAAC,GAAI,CAAC,GAAG,CAAC,CAAC;AACtC,2CAA2C;AAE3C;eACe,CAGf,sBAAsB,CACtB,SAAS,cAAc,CAAC,CAAC,EAAE,CAAC,EAAE;IAC5B,SAAS,MAAM,CAAC,CAAC,EAAE;QAAE,OAAO,CAAC,GAAG,CAAC,CAAA;KAAE;IACnC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA;CACxC;AAED,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC","sources":["src/js/chapters/functions.js"],"sourcesContent":["// practiced defining functions; invoking functions; function args and params; functions as values; functions as namespaces; closures; function properties, methods, and constructor; functional programming; \n\n\"use strict\"\n\n/* Function Declarations */\n\n// print the name and value of each property of o. Return undefined\nfunction printProps(o) {\n  for (p in o) {\n    console.log(`${p}: ${o[p]}\\n`)\n  }\n}\n\nconst myObject = {\n  name: 'David',\n  title: 'l33tc0d3r',\n  sex: 'yes, please :)'\n}\n\n// printProps(myObject)\n\n\n\nvar factorial = function f(x) {\n  if (x <= 1) return 1\n  return x * f(x - 1)\n}\n\n// console.log(factorial(4))\n\n// console.log(y)\n\nvar y = 40\n\n// defining function within block scope\nfunction Foo() {\n  console.log(candy); // undefined\n  if (true) {\n    var candy = function () {\n      console.log(9);\n    }\n    candy();\n  }\n\n  console.log(candy);\n  candy();\n}\n\n// Foo()\n\n\n/* Function Expressions */\nconst square = function (x) {\n  return x * x\n}\n\nlet tenSquared = (function (x) { return x * x }(10))\n// console.log(tenSquared)\n\n\n/* Arrow Functions */\nconst sum = (x, y) => (x + y)\n// console.log(sum(10, 12))\n\nconst constantFunc = _ => (33)\n// console.log(constantFunc())\n\n// make a copy of array with null elements removed\nconst arr = [1, null, 2, 3]\n\nlet filtered = arr.filter(x => x !== null)\n// console.log(`filtered array: ${filtered}`)\n\nlet squares = filtered.map(x => x * x)\n// console.log(`squared elems: ${squares}`)\n\n/* Arrow functions do not have a prototype property, which means that they cannot be used as constructor functions for\n new classes */\n\n\n/* Nested Functions */\nfunction highOnPotenuse(a, b) {\n  function square(x) { return x * x }\n  return Math.sqrt(square(a) + square(b))\n}\n\nconsole.log(highOnPotenuse(3, 4))"],"names":[],"version":3,"file":"functions.2e33aae2.js.map","sourceRoot":"/__parcel_source_root/"}